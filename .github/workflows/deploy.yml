name: Deploy to Local VirtualBox

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: set application.yml
        run: |
          echo "${{ secrets.APPLICATION_PROD }}" > src/main/resources/application.yml
          

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test --parallel --build-cache

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t fastcampusgroup6/accommodation:latest .

      - name: Push Docker image to Docker Hub
        run: docker push fastcampusgroup6/accommodation:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Add known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Copy Docker Compose file to remote server
        env:
          VB_PRIVATE_KEY: ${{ secrets.VB_PRIVATE_KEY }}
        run: |
          echo "$VB_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem docker-compose.yml user@yusuengdo.ddns.net:/home/user/
          rm private_key.pem

      - name: Set environment variables on remote server
        env:
          VB_PRIVATE_KEY: ${{ secrets.VB_PRIVATE_KEY }}
        run: |
          echo "$VB_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem user@yusuengdo.ddns.net << 'EOF'
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > /home/user/.env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> /home/user/.env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> /home/user/.env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> /home/user/.env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> /home/user/.env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> /home/user/.env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> /home/user/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> /home/user/.env
          echo "APPLICATION_PORT=${{ secrets.APPLICATION_PORT }}" >> /home/user/.env
          EOF
          rm private_key.pem

      - name: Deploy to VirtualBox
        env:
          VB_PRIVATE_KEY: ${{ secrets.VB_PRIVATE_KEY }}
        run: |
          echo "$VB_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem user@yusuengdo.ddns.net << 'EOF'
          cd /home/user/
          docker-compose --env-file .env down
          docker-compose --env-file .env pull
          docker-compose --env-file .env up -d
          EOF
          rm private_key.pem
